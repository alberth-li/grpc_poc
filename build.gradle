plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.21"
    id("org.jetbrains.kotlin.kapt") version "1.6.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.21"
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.4.1"
    id("com.google.protobuf") version "0.8.15"
}

version = "0.1"
group = "zira.ai"

def grpcVersion = '1.47.0'
def protobufJavaVersion = '3.21.1'
def grpcKotlinVersion = '1.3.0'


repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.grpc:micronaut-grpc-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.7.0")
    implementation("io.grpc:grpc-kotlin-stub:1.3.0")
    implementation ("io.grpc:protoc-gen-grpc-kotlin:1.3.0")
    compileOnly("io.grpc:grpc-stub:1.47.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation('io.grpc:grpc-protobuf:1.47.0')
    implementation('com.google.protobuf:protobuf-kotlin:3.21.1')

    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.0')
    testImplementation platform("org.testcontainers:testcontainers-bom:1.17.2")
    testImplementation("com.github.kstyrc:embedded-redis:0.6")
    testImplementation("io.micronaut.flyway:micronaut-flyway")
    testImplementation("io.micronaut.rxjava2:micronaut-rxjava2-http-client")
    testImplementation("io.mockk:mockk:1.12.4")
    testImplementation("net.datafaker:datafaker:1.4.0")
    testImplementation("org.assertj:assertj-core:3.23.1")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")

}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("zira.ai.*")
    }
}

application {
    mainClass.set("zira.ai.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
}

test {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufJavaVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
        grpckt { artifact = "io.grpc:protoc-gen-grpc-kotlin:${grpcKotlinVersion}:jdk8@jar" }
    }
    generateProtoTasks {
        all().forEach {
            protoc()
            it.plugins {
                grpc
                grpckt
            }
            it.builtins {
                kotlin{}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/grpckt'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}



